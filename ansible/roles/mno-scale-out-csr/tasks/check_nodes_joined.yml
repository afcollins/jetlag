---
- name: Set Facts to recurse with
  set_fact:
    r_qry: "{{ qry }}"
    r_worker_counter: "{{ worker_counter }}"

- name: Set KUBECONFIG path based on cluster type
  set_fact:
    cluster_kubeconfig: "{{ bastion_cluster_config_dir }}/{{ 'kubeconfig' if cluster_type != 'sno' else groups['sno'][0] + '/kubeconfig' }}"

- name: approve CSRs and check if nodes have joined the cluster
  block:
    - name: Increment the retry count
      set_fact:
        retry: "{{ 0 if retry is undefined else retry | int + 1 }}"

    - name: Pause during loop
      pause:
        seconds: "30"
      when: retry|int > 0

    - name: Get CSRs
      shell: oc get csr -o json
      register: oc_get_csr
      environment:
        KUBECONFIG: "{{ cluster_kubeconfig }}"
    
    - name: Approve pending CSRs
      shell: oc adm certificate approve {{ item.metadata.name }}
      loop: "{{ oc_get_csr.stdout | from_json | json_query(qry) }}"
      loop_control:
        label: "{{ item.metadata.name }}"
      environment:
        KUBECONFIG: "{{ cluster_kubeconfig }}"
    
    - name: Get worker node count
      shell: oc get nodes | {{ worker_counter }}
      register: oc_get_nodes_workers
      environment:
        KUBECONFIG: "{{ cluster_kubeconfig }}"

    - name: Current Worker Node Count
      debug:
        var: oc_get_nodes_workers.stdout

    - name: Waiting for Worker Node Count
      debug:
        msg: "{{ current_worker_count+scale_out_count }}"

    - name: Raise fail to trigger retry if all nodes didn't meet requirments
      fail:
        msg: All nodes have not met check requirements
      when: oc_get_nodes_workers.stdout|int < current_worker_count+scale_out_count
  rescue:
    - name: Fail on maximum retry count
      fail:
        msg: Maximum retries reached
      when: retry | int == 540

    - name: Retry the check
      include_tasks: check_nodes_joined.yml
      vars:
        qry: "{{ r_qry }}"
        worker_counter: "{{ r_worker_counter }}"
